{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ForgotPasswordPage } from '../forgot-password/forgot-password.page';\nimport { RegisterPage } from '../register/register.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction LoginPage_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \"Username / Email can not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPage_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \"Password can not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPage_p_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \"Invalid email or password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(api, router, modalController, loadingController) {\n      this.api = api;\n      this.router = router;\n      this.modalController = modalController;\n      this.loadingController = loadingController;\n      this.type = 'password';\n      this.user = {\n        email: '',\n        password: ''\n      };\n      this.invalid = false;\n      this.nonaktif = false;\n    }\n\n    ngOnInit() {\n      this.cekLogin();\n    }\n\n    ionViewWillEnter() {\n      this.loginStatus();\n    }\n\n    loginStatus() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = true;\n        return yield this.loadingController.create({\n          spinner: 'crescent',\n          message: 'Mohon Tunggu...',\n          cssClass: 'custom-class custom-loading'\n        }).then(a => {\n          a.present().then(() => {\n            console.log('presented');\n            this.cekLogin();\n          });\n          this.loading = false;\n        });\n      });\n    }\n\n    show() {\n      this.type == 'password' ? this.type = 'text' : this.type = 'password';\n    }\n\n    login(email, password) {\n      this.submited = true;\n      this.loading = true;\n      this.user.email = this.user.email.toLowerCase();\n\n      if (this.user.remember == true) {\n        localStorage.setItem('userSalammu', JSON.stringify(this.user));\n      }\n\n      if (email.invalid == false && password.invalid == false) {\n        this.api.post('auth/login', this.user).then(res => {\n          this.loading = false;\n          this.submited = false;\n          localStorage.setItem('salammuToken', JSON.stringify(res));\n          this.redirect(res);\n        }, err => {\n          var that = this;\n          this.loading = false;\n          this.submited = false;\n\n          if (err.error.status == 'invalid') {\n            this.invalid = true;\n          } else if (err.error.status == 'not_match') {\n            this.invalid = true;\n          }\n\n          setTimeout(function () {\n            that.invalid = false;\n          }, 1000);\n        });\n      } else {\n        var that = this;\n        setTimeout(function () {\n          that.submited = false;\n          that.loading = false;\n        }, 500);\n      }\n    }\n\n    cekLogin() {\n      this.api.me().then(res => {\n        this.redirect(res);\n      }, error => {\n        this.loadingController.dismiss();\n      });\n    }\n\n    redirect(user) {\n      if (user.is_active == 1) {\n        var that = this;\n        setTimeout(function () {\n          that.dismiss();\n          that.router.navigate(['/profil']);\n        }, 1000);\n      } else {\n        this.dismiss();\n        this.nonaktif = true;\n        setTimeout(function () {\n          location.reload();\n        }, 1000);\n      }\n\n      this.loadingController.dismiss();\n    }\n\n    dismiss() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.modalController.dismiss({\n          'dismissed': true\n        }).catch(error => {\n          this.router.navigate(['/home']);\n        });\n      });\n    }\n\n    modalRegister() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: RegisterPage,\n          mode: \"md\"\n        });\n        modal.onDidDismiss().then(res => {\n          this.dismiss();\n          this.router.navigate(['/profil']);\n        });\n        return yield modal.present();\n      });\n    }\n\n    modalForgot() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: ForgotPasswordPage,\n          mode: \"md\"\n        });\n        modal.onDidDismiss().then(res => {\n          this.dismiss();\n          this.router.navigate(['/profil']);\n        });\n        return yield modal.present();\n      });\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i3.LoadingController));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 34,\n    vars: 9,\n    consts: [[1, \"ion-no-border\"], [\"color\", \"primary\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"close\"], [1, \"ion-padding\"], [1, \"ion-text-center\"], [\"src\", \"./assets/icon/logo.svg\", \"width\", \"40%\"], [\"id\", \"content\"], [\"color\", \"medium\"], [1, \"input\"], [\"type\", \"email\", \"required\", \"\", \"placeholder\", \"Enter your email\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"required\", \"\", \"placeholder\", \"Enter your password\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"slot\", \"end\", \"color\", \"medium\", 3, \"name\", \"click\"], [2, \"display\", \"flex\"], [\"color\", \"primary\", \"fill\", \"clear\", \"size\", \"small\", 1, \"ion-text-capitalize\", 3, \"click\"], [2, \"flex-grow\", \"1\"], [\"style\", \"color: red; text-align: center;\", 4, \"ngIf\"], [\"color\", \"primary\", 1, \"custom-button\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"], [2, \"color\", \"red\", \"text-align\", \"center\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 1);\n        i0.ɵɵelementStart(2, \"ion-buttons\", 2);\n        i0.ɵɵelementStart(3, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_3_listener() {\n          return ctx.dismiss();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-content\", 5);\n        i0.ɵɵelementStart(6, \"ion-row\");\n        i0.ɵɵelementStart(7, \"ion-col\", 6);\n        i0.ɵɵelement(8, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"ion-text\", 9);\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-item\", 10);\n        i0.ɵɵelementStart(14, \"ion-input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_14_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, LoginPage_p_16_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementStart(17, \"ion-text\", 9);\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-item\", 10);\n        i0.ɵɵelementStart(21, \"ion-input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_21_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-icon\", 16);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_icon_click_23_listener() {\n          return ctx.show();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, LoginPage_p_24_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementStart(25, \"div\", 17);\n        i0.ɵɵelementStart(26, \"ion-button\", 18);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_26_listener() {\n          return ctx.modalForgot();\n        });\n        i0.ɵɵtext(27, \"Lupa Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"div\", 19);\n        i0.ɵɵelementStart(29, \"ion-button\", 18);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_29_listener() {\n          return ctx.modalRegister();\n        });\n        i0.ɵɵtext(30, \"Registrasi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, LoginPage_p_31_Template, 2, 0, \"p\", 20);\n        i0.ɵɵelementStart(32, \"ion-button\", 21);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_32_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(15);\n\n          const _r2 = i0.ɵɵreference(22);\n\n          return ctx.login(_r0, _r2);\n        });\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(15);\n\n        const _r2 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.submited == true && _r0.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"type\", ctx.type);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"name\", ctx.type == \"password\" ? \"eye-outline\" : \"eye-off-outline\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submited == true && _r2.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.invalid == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Mohon Tunggu...\" : \"Masuk\", \" \");\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonButton, i3.IonIcon, i3.IonContent, i3.IonRow, i3.IonCol, i3.IonText, i3.IonItem, i3.IonInput, i3.TextValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i5.NgIf],\n    styles: [\"ion-content[_ngcontent-%COMP%]{--background: #40A083}.center-item[_ngcontent-%COMP%]{margin:0;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}#content[_ngcontent-%COMP%]{position:relative;background-color:#fff;padding:16px;border-radius:10px}.custom-button[_ngcontent-%COMP%]{height:40px;width:100%;--border-radius: 5px;font-size:18px;font-weight:400}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}