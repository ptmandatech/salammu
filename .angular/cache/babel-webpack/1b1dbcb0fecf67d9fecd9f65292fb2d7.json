{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@awesome-cordova-plugins/music-controls/ngx\";\nexport let ModalSuratComponent = /*#__PURE__*/(() => {\n  class ModalSuratComponent {\n    constructor(navParams, modalCtrl, musicControls) {\n      this.navParams = navParams;\n      this.modalCtrl = modalCtrl;\n      this.musicControls = musicControls;\n    }\n\n    ngOnInit() {\n      this.detailSurat = this.navParams.get('detailSurat');\n    } // play() {\n    //   this.musicControls.create({\n    //     track       : this.detailSurat.nama_latin,     // optional, default : nothing\n    //     // cover can be a local path (use fullpath 'file:///storage/emulated/...', or only 'my_image.jpg' if my_image.jpg is in the www folder of your app)\n    //     //           or a remote url ('http://...', 'https://...', 'ftp://...')\n    //     isPlaying   : true,                         // optional, default : true\n    //     dismissable : true,                         // optional, default : false\n    //     // hide previous/next/close buttons:\n    //     hasPrev   : false,      // show previous button, optional, default: true\n    //     hasNext   : false,      // show next button, optional, default: true\n    //     hasClose  : true,       // show close button, optional, default: false\n    //   // iOS only, optional // optional, default: ''\n    //     duration : 60, // optional, default: 0\n    //     elapsed : 10, // optional, default: 0\n    //     hasSkipForward : true,  // show skip forward button, optional, default: false\n    //     hasSkipBackward : true, // show skip backward button, optional, default: false\n    //     skipForwardInterval: 15, // display number for skip forward, optional, default: 0\n    //     skipBackwardInterval: 15, // display number for skip backward, optional, default: 0\n    //     hasScrubbing: false, // enable scrubbing from control center and lockscreen progress bar, optional\n    //     // Android only, optional\n    //     // text displayed in the status bar when the notification (and the ticker) are updated, optional\n    //     ticker    : 'Sedang Diputar ' + this.detailSurat.nama_latin,\n    //     // All icons default to their built-in android equivalents\n    //     playIcon: 'media_play',\n    //     pauseIcon: 'media_pause',\n    //     prevIcon: 'media_prev',\n    //     nextIcon: 'media_next',\n    //     closeIcon: 'media_close',\n    //     notificationIcon: 'notification'\n    //    });\n    //    this.musicControls.subscribe().subscribe(action => {\n    //      function events(action) {\n    //        const message = JSON.parse(action).message;\n    //           switch(message) {\n    //               case 'music-controls-next':\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-previous':\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-pause':\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-play':\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-destroy':\n    //                   // Do something\n    //                   break;\n    //            // External controls (iOS only)\n    //            case 'music-controls-toggle-play-pause' :\n    //                   // Do something\n    //                   break;\n    //            case 'music-controls-seek-to':\n    //              const seekToInSeconds = JSON.parse(action).position;\n    //              this.musicControls.updateElapsed({\n    //                elapsed: seekToInSeconds,\n    //                isPlaying: true\n    //              });\n    //              // Do something\n    //              break;\n    //            case 'music-controls-skip-forward':\n    //              // Do something\n    //              break;\n    //            case 'music-controls-skip-backward':\n    //              // Do something\n    //              break;\n    //               // Headset events (Android only)\n    //               // All media button events are listed below\n    //               case 'music-controls-media-button' :\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-headset-unplugged':\n    //                   // Do something\n    //                   break;\n    //               case 'music-controls-headset-plugged':\n    //                   // Do something\n    //                   break;\n    //               default:\n    //                   break;\n    //           }\n    //        }\n    //       });\n    //    this.musicControls.listen(); // activates the observable above\n    //    this.musicControls.updateIsPlaying(true);\n    // }\n\n\n    dismiss() {\n      this.modalCtrl.dismiss();\n    }\n\n  }\n\n  ModalSuratComponent.ɵfac = function ModalSuratComponent_Factory(t) {\n    return new (t || ModalSuratComponent)(i0.ɵɵdirectiveInject(i1.NavParams), i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.MusicControls));\n  };\n\n  ModalSuratComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalSuratComponent,\n    selectors: [[\"app-modal-surat\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"ion-no-border\"], [1, \"ion-padding\"], [\"color\", \"primary\", \"slot\", \"end\", \"name\", \"close-circle-outline\", 3, \"click\"], [\"color\", \"primary\"], [1, \"ion-no-padding\"], [1, \"ion-justify-content-center\"], [\"size-md\", \"2\"], [\"size-md\", \"6\"], [\"lines\", \"none\", 1, \"ion-padding\"], [\"lines\", \"none\", 1, \"list-custom\"], [\"controls\", \"\"], [\"type\", \"audio/mpeg\", 3, \"src\"]],\n    template: function ModalSuratComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-item\", 1);\n        i0.ɵɵelementStart(3, \"ion-icon\", 2);\n        i0.ɵɵlistener(\"click\", function ModalSuratComponent_Template_ion_icon_click_3_listener() {\n          return ctx.dismiss();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-label\");\n        i0.ɵɵelementStart(5, \"ion-text\", 3);\n        i0.ɵɵelementStart(6, \"h2\");\n        i0.ɵɵtext(7, \"Putar Audio Surat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-content\");\n        i0.ɵɵelementStart(9, \"ion-grid\", 4);\n        i0.ɵɵelementStart(10, \"ion-row\", 5);\n        i0.ɵɵelement(11, \"ion-col\", 6);\n        i0.ɵɵelementStart(12, \"ion-col\", 7);\n        i0.ɵɵelementStart(13, \"ion-list\", 8);\n        i0.ɵɵelementStart(14, \"ion-item\", 9);\n        i0.ɵɵelementStart(15, \"audio\", 10);\n        i0.ɵɵelement(16, \"source\", 11);\n        i0.ɵɵtext(17, \" Your browser does not support the audio element. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"ion-col\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.detailSurat.audio, i0.ɵɵsanitizeUrl);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonItem, i1.IonIcon, i1.IonLabel, i1.IonText, i1.IonContent, i1.IonGrid, i1.IonRow, i1.IonCol, i1.IonList],\n    styles: [\"\"]\n  });\n  return ModalSuratComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}